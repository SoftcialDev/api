name: Build, zip & deploy – livekit-agent-azure-func

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  FUNC_SRC: src
  NODE_VER: '20.x'

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ env.NODE_VER }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VER }}

      - name: Install deps, build & Prisma
        shell: pwsh
        run: |
          Push-Location ${{ env.FUNC_SRC }}
          npm install
          npm run build
          npm run prisma:generate
          if (-Not (Test-Path ".\node_modules\.prisma\client")) {
            Write-Error "❌ No se generó Prisma Client"
            Exit 1
          }
          npm run migrate:deploy
          Pop-Location

      - name: Create deploy ZIP
        shell: pwsh
        run: |
          # Borra ZIP previo si existe
          Remove-Item -Force ../deploy.zip -ErrorAction Ignore
          # Empaqueta solo el contenido de src/, sin carpeta raíz
          Compress-Archive -Path ${{ env.FUNC_SRC }}\* -DestinationPath ../deploy.zip -Force

      - name: Validate ZIP structure
        shell: pwsh
        run: |
          # Extrae temporalmente para comprobaciones
          Remove-Item -Recurse -Force ../zip-temp -ErrorAction Ignore
          Expand-Archive -Path ../deploy.zip -DestinationPath ../zip-temp -Force

          # 1) Debe existir host.json en la raíz
          if (-Not (Test-Path "../zip-temp/host.json")) {
            Write-Error "❌ Falta host.json en el ZIP"
            Exit 1
          }

          # 2) No debe existir carpeta zip-temp/src
          if (Test-Path "../zip-temp/src") {
            Write-Error "❌ ZIP contiene carpeta src/ en lugar de su contenido"
            Exit 1
          }

          # 3) Debe contener node_modules/.prisma/client
          if (-Not (Test-Path "../zip-temp/node_modules/.prisma/client")) {
            Write-Error "❌ Falta node_modules/.prisma/client en el ZIP"
            Exit 1
          }

          Write-Host "✅ ZIP structure OK"
          Remove-Item -Recurse -Force ../zip-temp

  deploy:
    runs-on: windows-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id:       ${{ secrets.AZUREAPPSERVICE_CLIENTID_B9CC5E7DD4CD4EBF84F817C7243AC885 }}
          tenant-id:       ${{ secrets.AZUREAPPSERVICE_TENANTID_47BEC7C0624B42299932C78F6C01DF57 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_80E5F5856F2F46CFB7B591B7CD076727 }}

      - name: Zip-deploy to Azure Function
        shell: pwsh
        run: az functionapp deployment source config-zip --resource-group livekit-agent-azure --name livekit-agent-azure-func --src "./deploy.zip"
