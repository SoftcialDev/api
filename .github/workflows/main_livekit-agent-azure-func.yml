name: Build, Zip & Deploy – livekit-agent-azure-func

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  FUNC_SRC: src      # folder containing host.json, functions code, node_modules, etc.
  NODE_VER: '20.x'   # Node.js version to use

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ env.NODE_VER }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VER }}

      - name: Install dependencies, build & generate Prisma client
        shell: pwsh
        run: |
          # Change into function source directory
          Push-Location ${{ env.FUNC_SRC }}

          # Install all dependencies
          npm install

          # Compile TypeScript to JavaScript
          npm run build

          # Generate Prisma Client
          npm run prisma:generate

          # Fail if Prisma Client was not created
          if (-Not (Test-Path ".\node_modules\.prisma\client")) {
            Write-Error "❌ Prisma Client was not generated"
            Exit 1
          }

          # Apply database migrations
          npm run migrate:deploy

          # Return to workspace root
          Pop-Location

      - name: Package deployable ZIP
        shell: pwsh
        run: |
          # Remove any existing ZIP
          Remove-Item -Force deploy.zip -ErrorAction Ignore

          # Create a ZIP of the contents of src/, not the src folder itself
          Compress-Archive -Path ${{ env.FUNC_SRC }}\* -DestinationPath deploy.zip -Force

      - name: Validate ZIP contents
        shell: pwsh
        run: |
          # Extract ZIP to temp folder for inspection
          Remove-Item -Recurse -Force zip-temp -ErrorAction Ignore
          Expand-Archive -Path deploy.zip -DestinationPath zip-temp -Force

          # 1) Ensure host.json is at the root
          if (-Not (Test-Path "zip-temp/host.json")) {
            Write-Error "❌ host.json is missing in ZIP root"
            Exit 1
          }

          # 2) Ensure no nested src/ folder
          if (Test-Path "zip-temp/src") {
            Write-Error "❌ ZIP contains a nested src/ folder"
            Exit 1
          }

          # 3) Ensure Prisma Client is included
          if (-Not (Test-Path "zip-temp/node_modules/.prisma/client")) {
            Write-Error "❌ node_modules/.prisma/client is missing in ZIP"
            Exit 1
          }

          Write-Host "✅ ZIP structure is valid"
          Remove-Item -Recurse -Force zip-temp

  deploy:
    runs-on: windows-latest
    needs: build
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy ZIP via Publish Profile
        uses: Azure/functions-action@v1
        with:
          app-name:                       livekit-agent-azure-func
          slot-name:                      Production
          package:                        './deploy.zip'
          publish-profile:                ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_FF8DCA89135F49D0BAFC08A0152A293C }}
          scm-do-build-during-deployment: false
          enable-oryx-build:              false
          remote-build:                   false