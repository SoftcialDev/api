name: Build, Zip & Deploy ‚Äì livekit-agent-azure-func

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/api-functions/**'
      - '.github/workflows/main_livekit-agent-azure-func.yml'
  workflow_dispatch:

env:
  FUNC_SRC: apps/api-functions
  NODE_VER: '20.x'

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ env.NODE_VER }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VER }}

      - name: Install deps, build & generate Prisma client
        shell: pwsh
        run: |
          Push-Location ${{ env.FUNC_SRC }}
          npm install
          npm run build
          npm run prisma:generate
          if (-Not (Test-Path ".\node_modules\.prisma\client")) {
            Write-Error "‚ùå Prisma Client was not generated"
            Exit 1
          }
          npm run migrate:deploy
          Pop-Location

      - name: Package deployable ZIP
        shell: pwsh
        run: |
          Remove-Item -Force deploy.zip -ErrorAction Ignore
          Compress-Archive -Path ${{ env.FUNC_SRC }}\* -DestinationPath deploy.zip -Force

      - name: Validate ZIP contents
        shell: pwsh
        run: |
          Remove-Item -Recurse -Force zip-temp -ErrorAction Ignore
          Expand-Archive -Path deploy.zip -DestinationPath zip-temp -Force
          if (-Not (Test-Path "zip-temp/host.json")) {
            Write-Error "‚ùå host.json is missing in ZIP root"
            Exit 1
          }
          if (Test-Path "zip-temp/apps/api-functions") {
            Write-Error "‚ùå ZIP contains nested apps/api-functions folder"
            Exit 1
          }
          if (-Not (Test-Path "zip-temp/node_modules/.prisma/client")) {
            Write-Error "‚ùå node_modules/.prisma/client is missing in ZIP"
            Exit 1
          }
          Write-Host "‚úÖ ZIP structure is valid"
          Remove-Item -Recurse -Force zip-temp

  deploy:
    runs-on: windows-latest
    needs: build
    permissions:
      contents: read
    steps:
      - name: Find deploy.zip in workspace
        shell: pwsh
        run: |
          $zip = Get-ChildItem -Path $Env:GITHUB_WORKSPACE -Filter deploy.zip -Recurse |
                 Select-Object -First 1 -ExpandProperty FullName
          if (-Not (Test-Path $zip)) {
            Write-Error "‚ùå deploy.zip not found in workspace"
            Exit 1
          }
          Write-Host "üì¶ Deploying ZIP at path: $zip"

      - name: Deploy ZIP with publish-profile
        uses: Azure/functions-action@v1
        with:
          app-name:        livekit-agent-azure-func
          slot-name:       Production
          package:         ${{ steps.find.outputs.zipPath || '$zip' }}
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_FF8DCA89135F49D0BAFC08A0152A293C }}
