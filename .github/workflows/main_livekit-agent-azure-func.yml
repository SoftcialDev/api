name: Build and deploy Node.js project to Azure Function App - livekit-agent-azure-func

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'src'
  NODE_VERSION: '20.x'

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install, Prisma & Build
        shell: pwsh
        run: |
          pushd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

          npm install
          npm run prisma:generate
          npm run build
  

          if (-Not (Test-Path ".\node_modules\.prisma\client")) {
            Write-Error "❌ Prisma Client no se generó"
            exit 1
          }

          npm run migrate:deploy
          popd

      - name: Upload artifact for deploy
        uses: actions/upload-artifact@v4
        with:
          name: functionapp-src
          path: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}   # <– sube todo src/, incluidas carpetas ocultas

  deploy:
    runs-on: windows-latest
    needs: build
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: functionapp-src
          path: functionapp-src

      - name: Verify Prisma client in artifact
        shell: pwsh
        run: |
          $p = "functionapp-src\${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}\node_modules\.prisma\client"
          if (-Not (Test-Path $p)) {
            Write-Error "❌ Prisma Client no viaja en el artifact ($p)"
            exit 1
          }
          Write-Host "✅ Prisma Client OK"

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id:       ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id:       ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      - name: Deploy to Azure Functions
        uses: Azure/functions-action@v1
        with:
          app-name:                       'livekit-agent-azure-func'
          slot-name:                      'Production'
          package:                        '${{ github.workspace }}/functionapp-src/${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          scm-do-build-during-deployment: false
          respect-funcignore:             true
